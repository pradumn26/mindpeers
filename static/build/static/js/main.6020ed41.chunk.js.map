{"version":3,"sources":["components/LoginPage.js","components/DoctorsHome.js","components/UsersHome.js","components/LandingPage.js","components/Header.js","components/UsersSignup.js","components/DoctorsSignup.js","components/BookingModal.js","components/DoctorsList.js","actions/index.js","actions/types.js","components/MyAppointments.js","components/Notifications.js","components/TodaysAppointments.js","components/App.js","reducers/index.js","reducers/authReducer.js","reducers/doctorsListReducer.js","reducers/myAppointmentsReducer.js","reducers/notificationsReducer.js","reducers/todaysAppointmentsReducer.js","serviceWorker.js","index.js"],"names":["LoginPage","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","userSignUpButton","bind","assertThisInitialized","doctorsSignUpButton","userLoginButton","doctorsLoginButton","react_default","a","createElement","id","className","method","action","name","type","placeholder","onClick","event","preventDefault","props","history","push","email","document","getElementById","value","trim","password","doSubmit","innerText","submit","Component","withRouter","DoctorsHome","auth","react_router","to","authType","connect","_ref","UsersHome","LandingPage","components_LoginPage","components_DoctorsHome","components_UsersHome","Header","react_router_dom","data-toggle","data-target","aria-controls","aria-expanded","aria-label","href","UsersSignup","onSubmit","phone","city","medicalCondition","DoctorsSignup","specialisation","BookingModal","confirmButton","bookingButton","renderConfirmButton","renderModalBody","state","slots","selectedSlot","bookingDone","msg","role","aria-labelledby","aria-hidden","data-dismiss","$","window","self","on","pos","relatedTarget","data","doctor_id","doctorsList","_id","axios","post","then","res","console","log","setState","map","v","i","classList","enable","key","startTime","endTime","disabled","target","getAttribute","start_time","end_time","success","catch","err","_ref2","DoctorsList","renderDoctorsList","components_BookingModal","fetchDoctors","length","src","data-pos","dispatch","get","payload","MyAppointments","renderAppointmentsList","fetchMyAppointments","myAppointments","doctor_name","date","status","Notifications","renderNotificationsList","clickHandler","fetchNotifications","clearNotifications","myNotifications","text","location","assign","url","TodaysAppointments","fetchTodaysAppointments","todaysAppointments","user_name","user_medical_condition","confirmAppointment","appointment_id","App","components_Header","exact","path","component","UsersSignUp","DoctorsSignUp","fetchUser","combinedReducer","combineReducers","arguments","undefined","newState","Boolean","hostname","match","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","es","components_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6020ed41.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport '../stylesheets/loginpage.css';\r\n\r\nclass LoginPage extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.userSignUpButton = this.userSignUpButton.bind(this);\r\n        this.doctorsSignUpButton = this.doctorsSignUpButton.bind(this);\r\n        this.userLoginButton = this.userLoginButton.bind(this);\r\n        this.doctorsLoginButton = this.doctorsLoginButton.bind(this);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"login_page\" className=\"row\">\r\n                <div id=\"users_login\" className=\"col-sm-5\">\r\n                    <h1>\r\n                        User Login\r\n                    </h1>\r\n\r\n                    <form id=\"f1\" method=\"POST\" action=\"/usersLogin\">\r\n                        <input id=\"f1_email\" name=\"email\" type=\"email\" placeholder=\"Email\"/>\r\n                        <span id=\"f1_email_error\" className=\"error_span\"/>\r\n                        <input id=\"f1_password\" name=\"password\" type=\"password\" placeholder=\"Password\"/>\r\n                        <span id=\"f1_password_error\" className=\"error_span\"/>\r\n                        <button className=\"login_button\" onClick={this.userLoginButton}>LOG IN</button>\r\n                        <button onClick={this.userSignUpButton}>SIGN UP</button>\r\n                    </form>\r\n                </div>\r\n\r\n                <div id=\"doctors_login\" className=\"col-sm-5\">\r\n                    <h1>\r\n                        Doctor's Login\r\n                    </h1>\r\n\r\n                    <form method=\"POST\" action=\"/doctorsLogin\">\r\n                        <input id=\"f2_email\" name=\"email\" type=\"email\" placeholder=\"Email\"/>\r\n                        <span id=\"f2_email_error\" className=\"error_span\"/>\r\n                        <input id=\"f2_password\" name=\"password\" type=\"password\" placeholder=\"Password\"/>\r\n                        <span id=\"f2_password_error\" className=\"error_span\"/>\r\n                        <button className=\"login_button\" onClick={this.doctorsLoginButton}>LOG IN</button>\r\n                        <button onClick={this.doctorsSignUpButton}>SIGN UP</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    userSignUpButton(event) {\r\n        event.preventDefault();\r\n        this.props.history.push('/usersSignUp');\r\n    }\r\n\r\n    doctorsSignUpButton(event) {\r\n        event.preventDefault();\r\n        this.props.history.push('/doctorsSignUp');\r\n    }\r\n\r\n    userLoginButton(event) {\r\n        event.preventDefault();\r\n        let email = document.getElementById('f1_email').value.trim();\r\n        let password = document.getElementById('f1_password').value.trim();\r\n\r\n        let emptyError = 'This field cannot be empty';\r\n        let doSubmit = true;\r\n\r\n        if (email == '') {\r\n            document.getElementById('f1_email_error').innerText = emptyError;\r\n            doSubmit = false;\r\n        }\r\n        if (password == '') {\r\n            document.getElementById('f1_password_error').innerText = emptyError;\r\n            doSubmit = false;\r\n        }\r\n\r\n        if (doSubmit)\r\n            document.getElementById('f1').submit();\r\n    }\r\n\r\n    doctorsLoginButton(event) {\r\n\r\n    }\r\n}\r\n\r\nexport default withRouter(LoginPage);","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nclass DoctorsHome extends Component{\r\n    render() {\r\n        switch (this.props.auth) {\r\n            case false:\r\n                return <Redirect to=\"/\"/>;\r\n            case null:\r\n                return null;\r\n            default:\r\n                if (this.props.auth.authType == 'doctors-auth')\r\n                    return <Redirect to=\"/todaysAppointments\"/>;\r\n                else\r\n                    return <Redirect to=\"/\"/>\r\n        }\r\n    }\r\n}\r\n\r\nfunction mapStateToProps({auth}) {\r\n    return {auth};\r\n}\r\n\r\nexport default connect(mapStateToProps)(DoctorsHome);","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nclass UsersHome extends Component {\r\n    render() {\r\n        switch (this.props.auth) {\r\n            case false:\r\n                return <Redirect to=\"/\"/>;\r\n            case null:\r\n                return null;\r\n            default:\r\n                if (this.props.auth.authType == 'doctors-auth')\r\n                    return <Redirect to=\"/\"/>;\r\n                else\r\n                    return <Redirect to=\"/doctors\"/>\r\n        }\r\n    }\r\n}\r\n\r\nfunction mapStateToProps({auth}) {\r\n    return {auth};\r\n}\r\n\r\nexport default connect(mapStateToProps)(UsersHome);","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport LoginPage from './LoginPage';\r\nimport DoctorsHome from './DoctorsHome';\r\nimport UsersHome from './UsersHome';\r\n\r\nclass LandingPage extends Component {\r\n    render() {\r\n        switch (this.props.auth) {\r\n            case false:\r\n                return <LoginPage/>;\r\n            case null:\r\n                return null;\r\n            default:\r\n                if (this.props.auth.authType == 'doctors-auth')\r\n                    return <DoctorsHome/>;\r\n                else\r\n                    return <UsersHome/>;\r\n        }\r\n    }\r\n}\r\n\r\nfunction mapStateToProps({auth}) {\r\n    return {auth};\r\n}\r\n\r\nexport default connect(mapStateToProps)(LandingPage);","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Link} from 'react-router-dom';\r\nimport '../stylesheets/header.css'\r\n\r\nclass Header extends Component {\r\n    render() {\r\n        switch (this.props.auth) {\r\n            case false:\r\n                return null;\r\n            case null:\r\n                return null;\r\n            default:\r\n                if (this.props.auth.authType == 'doctors-auth')\r\n                    return (\r\n                        <nav id=\"header\" className=\"navbar navbar-expand-sm navbar-light\">\r\n                            <Link className=\"navbar-brand\" to=\"/\">MindPeers</Link>\r\n                            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\r\n                                    data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\"\r\n                                    aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                                <span className=\"navbar-toggler-icon\"/>\r\n                            </button>\r\n\r\n                            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                                <ul className=\"navbar-nav mr-auto\">\r\n                                    <li className=\"nav-item\">\r\n                                        <Link className=\"nav-link\" to=\"/todaysAppointments\">Today's Appointments</Link>\r\n                                    </li>\r\n                                    <li className=\"nav-item\">\r\n                                        <Link className=\"nav-link\" to=\"/notifications\">Notifications</Link>\r\n                                    </li>\r\n                                </ul>\r\n                                <div className=\"form-inline my-2 my-lg-0\">\r\n                                    <a href=\"/auth/logout\">Logout</a>\r\n                                </div>\r\n                            </div>\r\n                        </nav>\r\n                    );\r\n                else\r\n                    return (\r\n                        <nav id=\"header\" className=\"navbar navbar-expand-sm navbar-light\">\r\n                            <Link className=\"navbar-brand\" to=\"/\">MindPeers</Link>\r\n                            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\r\n                                    data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\"\r\n                                    aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                                <span className=\"navbar-toggler-icon\"/>\r\n                            </button>\r\n\r\n                            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                                <ul className=\"navbar-nav mr-auto\">\r\n                                    <li className=\"nav-item active\">\r\n                                        <Link className=\"nav-link\" to=\"/doctors\">Doctors</Link>\r\n                                    </li>\r\n                                    <li className=\"nav-item\">\r\n                                        <Link className=\"nav-link\" to=\"/myAppointments\">Appointments</Link>\r\n                                    </li>\r\n                                    <li className=\"nav-item\">\r\n                                        <Link className=\"nav-link\" to=\"/notifications\">Notifications</Link>\r\n                                    </li>\r\n                                </ul>\r\n                                <div className=\"form-inline my-2 my-lg-0\">\r\n                                    <a href=\"/auth/logout\">Logout</a>\r\n                                </div>\r\n                            </div>\r\n                        </nav>\r\n                    );\r\n        }\r\n    }\r\n}\r\n\r\nfunction mapStateToProps({auth}) {\r\n    return {auth};\r\n}\r\n\r\nexport default connect(mapStateToProps)(Header);","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Redirect} from 'react-router-dom';\r\nimport queryString from 'query-string';\r\nimport '../stylesheets/userssignup.css';\r\n\r\nclass UsersSignup extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    render() {\r\n        switch (this.props.auth) {\r\n            case null:\r\n                return null;\r\n            case false:\r\n                return (\r\n                    <div id=\"users_signup\">\r\n                        <div id=\"user_signup_card\">\r\n                            <h1>\r\n                                User Signup\r\n                            </h1>\r\n\r\n                            <form id=\"f4\" method=\"POST\" action=\"/usersSignup\">\r\n                                <span id=\"f4_error\" className=\"error_span\"/>\r\n                                <input id=\"f4_name\" name=\"name\" type=\"text\" placeholder=\"Full Name\"/>\r\n                                <input id=\"f4_email\" name=\"email\" type=\"email\" placeholder=\"Email\"/>\r\n                                <input id=\"f4_phone\" name=\"phone\" type=\"tel\" placeholder=\"Contact\"/>\r\n                                <input id=\"f4_city\" name=\"city\" type=\"text\" placeholder=\"Enter city\"/>\r\n                                <input id=\"f4_password\" name=\"password\" type=\"password\"\r\n                                       placeholder=\"Choose a password\"/>\r\n                                <textarea id=\"f4_medical_condition\" name=\"medicalCondition\"\r\n                                          placeholder=\"Please describe your medical condition in brief.\"/>\r\n                                <button className=\"login_button\" onClick={this.onSubmit}>SUBMIT</button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            default:\r\n                return <Redirect to=\"/\"/>;\r\n        }\r\n    }\r\n\r\n    onSubmit(event) {\r\n        event.preventDefault();\r\n        let name = document.getElementById('f4_name').value.trim();\r\n        let email = document.getElementById('f4_email').value.trim();\r\n        let phone = document.getElementById('f4_phone').value.trim();\r\n        let city = document.getElementById('f4_city').value.trim();\r\n        let medicalCondition = document.getElementById('f4_medical_condition').value.trim();\r\n\r\n        if (!name || !email || !phone || !city || !medicalCondition)\r\n            document.getElementById('f4_error').innerText = 'Some of the fields are empty!!';\r\n        else\r\n            document.getElementById('f4').submit();\r\n    }\r\n}\r\n\r\nfunction mapStateToProps({auth}) {\r\n    return {auth};\r\n}\r\n\r\nexport default connect(mapStateToProps)(UsersSignup);","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Redirect} from 'react-router-dom';\r\nimport '../stylesheets/doctorssignup.css';\r\n\r\nclass DoctorsSignup extends Component{\r\n    constructor() {\r\n        super();\r\n\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    render() {\r\n        switch (this.props.auth) {\r\n            case null:\r\n                return null;\r\n            case false:\r\n                return (\r\n                    <div id=\"doctors_signup\">\r\n                        <div id=\"doc_signup_card\">\r\n                            <h1>\r\n                                Doctor's Signup\r\n                            </h1>\r\n\r\n                            <form id=\"f3\" method=\"POST\" action=\"/doctorsSignup\">\r\n                                <span id=\"f3_error\" className=\"error_span\"/>\r\n                                <input id=\"f3_name\" name=\"name\" type=\"text\" placeholder=\"Full Name\"/>\r\n                                <input id=\"f3_email\" name=\"email\" type=\"email\" placeholder=\"Email\"/>\r\n                                <input id=\"f3_phone\" name=\"phone\" type=\"tel\" placeholder=\"Contact\"/>\r\n                                <input id=\"f3_city\" name=\"city\" type=\"city\" placeholder=\"Enter city\"/>\r\n                                <input id=\"f3_specialisation\" name=\"specialisation\" type=\"text\" placeholder=\"Specialised in?\"/>\r\n                                <input id=\"f3_password\" name=\"password\" type=\"password\" placeholder=\"Choose a password\"/>\r\n                                <button className=\"login_button\" onClick={this.onSubmit}>SUBMIT</button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            default:\r\n                return <Redirect to=\"/\"/>;\r\n        }\r\n    }\r\n\r\n    onSubmit(event) {\r\n        event.preventDefault();\r\n        let name = document.getElementById('f3_name').value.trim();\r\n        let email = document.getElementById('f3_email').value.trim();\r\n        let phone = document.getElementById('f3_phone').value.trim();\r\n        let city = document.getElementById('f3_city').value.trim();\r\n        let specialisation = document.getElementById('f3_specialisation').value.trim();\r\n        let password = document.getElementById('f3_password').value.trim();\r\n\r\n        if (!name || !email || !phone || !city || !specialisation || !password)\r\n            document.getElementById('f3_error').innerText = 'Some of the fields are empty!!';\r\n        else\r\n            document.getElementById('f3').submit();\r\n    }\r\n}\r\n\r\nfunction mapStateToProps({auth}) {\r\n    return {auth};\r\n}\r\n\r\nexport default connect(mapStateToProps)(DoctorsSignup);","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport axios from 'axios';\r\nimport '../stylesheets/bookingmodal.css';\r\n\r\nclass BookingModal extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.confirmButton = this.confirmButton.bind(this);\r\n        this.bookingButton = this.bookingButton.bind(this);\r\n        this.renderConfirmButton = this.renderConfirmButton.bind(this);\r\n        this.renderModalBody = this.renderModalBody.bind(this);\r\n        this.state = {slots: null, selectedSlot: -1, bookingDone: false, msg: ''};\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"modal fade\" id=\"booking_modal\" role=\"dialog\"\r\n                 aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                <div className=\"modal-dialog\" role=\"document\">\r\n                    <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                            <h5 className=\"modal-title\" id=\"exampleModalLabel\">Time Slots for today</h5>\r\n                            <button type=\"button\" className=\"close\" data-dismiss=\"modal\"\r\n                                    aria-label=\"Close\">\r\n                                <span aria-hidden=\"true\">&times;</span>\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            {this.renderModalBody()}\r\n                        </div>\r\n                        <div className=\"modal-footer\">\r\n                            {this.renderConfirmButton()}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    componentDidMount() {\r\n        let $ = window.$;\r\n        let self = this;\r\n\r\n        $('#booking_modal').on('show.bs.modal', function (event) {\r\n            let button = $(event.relatedTarget)\r\n            let pos = button.data('pos');\r\n            let doctor_id = self.props.doctorsList[pos]._id;\r\n            self.doctor_id = doctor_id;\r\n\r\n            axios.post('/fetchTimeSlots', {doctor_id})\r\n                .then(function (res) {\r\n                    console.log(res.data);\r\n                    self.setState({slots: res.data, selectedSlot: self.state.selectedSlot, bookingDone: false, msg: ''});\r\n                })\r\n        });\r\n\r\n        $('#booking_modal').on('hidden.bs.modal', function (event) {\r\n            self.setState({slots: null, selectedSlot: -1, bookingDone: false, msg: ''})\r\n        })\r\n    }\r\n\r\n    renderModalBody() {\r\n        let self = this;\r\n\r\n        if (this.state.bookingDone) {\r\n            return (\r\n                <div>{this.state.msg}</div>\r\n            )\r\n        }\r\n\r\n        if (this.state.slots) {\r\n            return (\r\n                <ul>\r\n                    {\r\n                        (function () {\r\n                            return self.state.slots.map(function (v, i) {\r\n                                let classList = \"btn btn-outline-secondary\";\r\n\r\n                                if (v.enable && self.state.selectedSlot == i) {\r\n                                    classList += \" booking_btn_green\";\r\n                                } else if (!v.enable){\r\n                                    classList += \" booking_btn_red\";\r\n                                }\r\n\r\n                                return (\r\n                                    <li key={i}>\r\n                                        <button className={classList} onClick={v.enable ? self.bookingButton : ()=> {}} pos={i}>\r\n                                            {v.startTime}-{v.endTime}\r\n                                        </button>\r\n                                    </li>\r\n                                )\r\n                            })\r\n                        })()\r\n                    }\r\n                </ul>\r\n            )\r\n        } else {\r\n            return \"Loading....\";\r\n        }\r\n    }\r\n\r\n    renderConfirmButton() {\r\n        if (this.state.selectedSlot === -1 || this.state.bookingDone)\r\n            return (<button disabled type=\"button\" className=\"btn\">Confirm</button>);\r\n        else\r\n            return (<button type=\"button\" className=\"btn\" onClick={this.confirmButton}>Confirm</button>);\r\n    }\r\n\r\n    bookingButton(event) {\r\n        let button = event.target;\r\n        let pos = button.getAttribute('pos');\r\n\r\n        if (this.state.selectedSlot != pos)\r\n            this.setState({slots: this.state.slots, selectedSlot: pos, bookingDone: false, msg: ''});\r\n    }\r\n\r\n    confirmButton() {\r\n        let self = this;\r\n\r\n        let selectedSlot = this.state.selectedSlot;\r\n        axios.post('/bookAppointment', {doctor_id: this.doctor_id, start_time: this.state.slots[selectedSlot].startTime, end_time: this.state.slots[selectedSlot].endTime})\r\n            .then(function ({data}) {\r\n                if (data.success){\r\n                    self.setState({slots: self.state.slots, selectedSlot: self.state.selectedSlot, bookingDone: true, msg: 'Your appointment has been booked succesfully. Please track the status of your booking at the appointments page'});\r\n                } else {\r\n                    self.setState({slots: self.state.slots, selectedSlot: self.state.selectedSlot, bookingDone: true, msg: 'Something went wrong'});\r\n                }\r\n            })\r\n            .catch(function (err) {\r\n                console.log(err);\r\n            })\r\n    }\r\n}\r\n\r\nfunction mapStateToProps({doctorsList}) {\r\n    return {doctorsList};\r\n}\r\n\r\nexport default connect(mapStateToProps)(BookingModal);","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Redirect} from 'react-router-dom';\r\nimport '../stylesheets/doctorslist.css'\r\n\r\nimport BookingModal from './BookingModal';\r\nimport {fetchDoctors} from \"../actions\";\r\n\r\nclass DoctorsList extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.renderDoctorsList = this.renderDoctorsList.bind(this);\r\n    }\r\n\r\n    render() {\r\n        switch (this.props.auth) {\r\n            case null:\r\n                return null;\r\n            case false:\r\n                return <Redirect to=\"/\"/>;\r\n            default:\r\n                if (this.props.auth.authType == 'doctors-auth')\r\n                    return <Redirect to=\"/\"/>;\r\n                else\r\n                    return (\r\n                        <div id=\"doctors_list_page\">\r\n                            <ul id=\"doctors_list\">\r\n                                {this.renderDoctorsList()}\r\n                            </ul>\r\n\r\n                            <BookingModal/>\r\n                        </div>\r\n                    );\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.fetchDoctors();\r\n    }\r\n\r\n    renderDoctorsList() {\r\n        if (!this.props.doctorsList || this.props.doctorsList.length === 0)\r\n            return null\r\n        else\r\n            return this.props.doctorsList.map(\r\n                function (v, i) {\r\n                    return (\r\n                        <li key={i}>\r\n                            <img src=\"/images/doctor_image.png\"/>\r\n                            <div>\r\n                                Dr. {v.name}<br/>\r\n                                Specialisation: {v.specialisation}\r\n                            </div>\r\n                            <button className=\"btn\" data-toggle=\"modal\" data-target=\"#booking_modal\" data-pos={i}>Book</button>\r\n                        </li>\r\n                    )\r\n                }\r\n            )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps({auth, doctorsList}) {\r\n    return {auth, doctorsList};\r\n}\r\n\r\nexport default connect(mapStateToProps, {fetchDoctors})(DoctorsList);","import axios from 'axios';\r\n\r\nimport {FETCH_USER, FETCH_DOCTORS, FETCH_MY_APPOINTMENTS, FETCH_NOTIFICATIONS, CLEAR_NOTIFICATIONS, FETCH_TODAYS_APPOINTMENTS, CONFIRM_APPOINTMENT} from \"./types\";\r\n\r\nexport const fetchUser = ()=> dispatch => {\r\n    axios.get('/auth/fetchUser')\r\n        .then(function (res) {\r\n            dispatch({\r\n                type: FETCH_USER,\r\n                payload: res.data\r\n            })\r\n        })\r\n        .catch(function (err) {\r\n            console.log(err);\r\n        });\r\n};\r\n\r\nexport const fetchDoctors = () => dispatch => {\r\n    axios.get('/fetchDoctors')\r\n        .then(function (res) {\r\n            dispatch({\r\n                type: FETCH_DOCTORS,\r\n                payload: res.data\r\n            })\r\n        })\r\n        .catch(function (err) {\r\n            console.log(err);\r\n        })\r\n};\r\n\r\nexport const fetchMyAppointments = () => dispatch => {\r\n    axios.get('/fetchAppointments')\r\n        .then(function (res) {\r\n            dispatch({\r\n                type: FETCH_MY_APPOINTMENTS,\r\n                payload: res.data\r\n            });\r\n        })\r\n        .catch(function (err) {\r\n            console.log(err);\r\n        })\r\n};\r\n\r\nexport const fetchNotifications = () => dispatch => {\r\n    axios.get('/fetchNotifications')\r\n        .then(function (res) {\r\n            dispatch({\r\n                type: FETCH_NOTIFICATIONS,\r\n                payload: res.data\r\n            })\r\n        })\r\n        .catch(function (err) {\r\n            console.log(err);\r\n        })\r\n};\r\n\r\nexport const clearNotifications = () => dispatch => {\r\n    dispatch({\r\n        type: CLEAR_NOTIFICATIONS,\r\n        payload: []\r\n    })\r\n};\r\n\r\nexport const fetchTodaysAppointments = () => dispatch => {\r\n    axios.get('/fetchTodaysAppointments')\r\n        .then(function (res) {\r\n            dispatch({\r\n                type: FETCH_TODAYS_APPOINTMENTS,\r\n                payload: res.data\r\n            })\r\n        })\r\n        .catch(function (err) {\r\n            console.log(err);\r\n        })\r\n};\r\n\r\nexport const confirmAppointment = (appointment_id, pos) => dispatch => {\r\n    axios.post('/confirmAppointment', {appointment_id})\r\n        .then(function (res) {\r\n            dispatch({\r\n                type: CONFIRM_APPOINTMENT,\r\n                payload: {\r\n                    data: res.data,\r\n                    pos\r\n                }\r\n            })\r\n        })\r\n        .catch(function (err) {\r\n            console.log(err);\r\n        })\r\n};","export const FETCH_USER = 'fetch_user';\r\nexport const FETCH_DOCTORS = 'fetch_doctors';\r\nexport const FETCH_MY_APPOINTMENTS = 'fetch_my_appointments';\r\nexport const FETCH_NOTIFICATIONS = 'fetch_notifications';\r\nexport const CLEAR_NOTIFICATIONS = 'clear_notifications';\r\nexport const FETCH_TODAYS_APPOINTMENTS = 'fetch_todays_appointments';\r\nexport const CONFIRM_APPOINTMENT = 'confirm_appointment';","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Redirect} from 'react-router-dom';\r\nimport '../stylesheets/myappointments.css';\r\n\r\nimport {fetchMyAppointments} from \"../actions\";\r\n\r\nclass MyAppointments extends Component{\r\n    constructor() {\r\n        super();\r\n\r\n        this.renderAppointmentsList = this.renderAppointmentsList.bind(this);\r\n    }\r\n\r\n    render() {\r\n        switch (this.props.auth) {\r\n            case null:\r\n                return null;\r\n            case false:\r\n                return <Redirect to=\"/\"/>;\r\n            default:\r\n                if (this.props.auth.authType == 'doctors-auth')\r\n                    return <Redirect to=\"/\"/>;\r\n                else\r\n                    return (\r\n                        <div id=\"appointments_list_page\">\r\n                            <ul id=\"appointments_list\">\r\n                                {this.renderAppointmentsList()}\r\n                            </ul>\r\n                        </div>\r\n                    );\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.fetchMyAppointments();\r\n    }\r\n\r\n    renderAppointmentsList() {\r\n        if (!this.props.myAppointments || this.props.myAppointments.length === 0)\r\n            return null;\r\n        else\r\n            return this.props.myAppointments.map(\r\n                function (v, i) {\r\n                    return (\r\n                        <li key={i}>\r\n                            <img src=\"/images/doctor_image.png\"/>\r\n                            <div>\r\n                                Dr. {v.doctor_name}<br/>\r\n                                {v.date}<br/>\r\n                                {v.startTime} - {v.endTime}<br/>\r\n                                {v.status}\r\n                            </div>\r\n                        </li>\r\n                    )\r\n                }\r\n            )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps({auth, myAppointments}) {\r\n    return {auth, myAppointments};\r\n}\r\n\r\nexport default connect(mapStateToProps, {fetchMyAppointments})(MyAppointments);","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Redirect} from 'react-router-dom';\r\nimport '../stylesheets/notifications.css';\r\n\r\nimport {fetchNotifications, clearNotifications} from \"../actions\";\r\n\r\nclass Notifications extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.renderNotificationsList = this.renderNotificationsList.bind(this);\r\n        this.clickHandler = this.clickHandler.bind(this);\r\n    }\r\n\r\n    render() {\r\n        switch (this.props.auth) {\r\n            case null:\r\n                return null;\r\n            case false:\r\n                return <Redirect to=\"/\"/>;\r\n            default:\r\n                return (\r\n                    <div id=\"notifications_list_page\">\r\n                        <ul id=\"notifications_list\">\r\n                            {this.renderNotificationsList()}\r\n                        </ul>\r\n                    </div>\r\n                );\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.fetchNotifications();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.clearNotifications();\r\n    }\r\n\r\n    renderNotificationsList() {\r\n        let self = this;\r\n\r\n        if (!this.props.myNotifications || this.props.myNotifications.length === 0)\r\n            return null;\r\n        else\r\n            return this.props.myNotifications.map(\r\n                function (v, i) {\r\n                    return (\r\n                        <li key={i} pos={i} onClick={self.clickHandler}>\r\n                            <div pos={i} onClick={self.clickHandler}>\r\n                                {v.text}\r\n                            </div>\r\n                        </li>\r\n                    )\r\n                }\r\n            )\r\n    }\r\n\r\n    clickHandler(event) {\r\n        let pos = event.target.getAttribute('pos');\r\n\r\n        window.location.assign(this.props.myNotifications[pos].url);\r\n    }\r\n}\r\n\r\nfunction mapStateToProps({auth, myNotifications}) {\r\n    return {auth, myNotifications};\r\n}\r\n\r\nexport default connect(mapStateToProps, {fetchNotifications, clearNotifications})(Notifications);","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Redirect} from 'react-router-dom';\r\nimport '../stylesheets/todaysappointments.css';\r\n\r\nimport {fetchTodaysAppointments, confirmAppointment} from \"../actions\";\r\n\r\nclass TodaysAppointments extends Component{\r\n    constructor() {\r\n        super();\r\n\r\n        this.renderAppointmentsList = this.renderAppointmentsList.bind(this);\r\n        this.confirmButton = this.confirmButton.bind(this);\r\n        this.renderConfirmButton = this.renderConfirmButton.bind(this);\r\n    }\r\n\r\n    render() {\r\n        switch (this.props.auth) {\r\n            case null:\r\n                return null;\r\n            case false:\r\n                return <Redirect to=\"/\"/>;\r\n            default:\r\n                if (this.props.auth.authType == 'doctors-auth')\r\n                    return (\r\n                        <div id=\"t_appointments_list_page\">\r\n                            <ul id=\"t_appointments_list\">\r\n                                {this.renderAppointmentsList()}\r\n                            </ul>\r\n                        </div>\r\n                    );\r\n                else\r\n                    return <Redirect to=\"/\"/>;\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.fetchTodaysAppointments();\r\n    }\r\n\r\n    renderAppointmentsList() {\r\n        let self = this;\r\n\r\n        console.log(this.props.todaysAppointments);\r\n        if (!this.props.todaysAppointments || this.props.todaysAppointments.length === 0)\r\n            return null\r\n        else\r\n            return this.props.todaysAppointments.map(\r\n                function (v, i) {\r\n                    return (\r\n                        <li key={i}>\r\n                            <img src=\"/images/user_image.png\"/>\r\n                            <div>\r\n                                {v.user_name}<br/>\r\n                                {v.user_medical_condition}<br/>\r\n                                {v.date}<br/>\r\n                                {v.startTime} - {v.endTime}<br/>\r\n                                {v.status}\r\n                            </div>\r\n                            {self.renderConfirmButton(i)}\r\n                        </li>\r\n                    )\r\n                }\r\n            )\r\n    }\r\n\r\n    confirmButton(event) {\r\n        console.log(\"in confirmButton\");\r\n        let pos = event.target.getAttribute('pos');\r\n\r\n        this.props.confirmAppointment(this.props.todaysAppointments[pos]._id, pos);\r\n    }\r\n\r\n    renderConfirmButton(pos) {\r\n        if (this.props.todaysAppointments[pos].status == 'confirmed')\r\n            return (<div className=\"confirm_div\">Confirmed</div>);\r\n        else\r\n            return <button className=\"btn\" onClick={this.confirmButton} pos={pos}>Confirm</button>;\r\n    }\r\n}\r\n\r\nfunction mapStateToProps({auth, todaysAppointments}) {\r\n    return {auth, todaysAppointments};\r\n}\r\n\r\nexport default connect(mapStateToProps, {fetchTodaysAppointments, confirmAppointment})(TodaysAppointments);","import React, {Component} from 'react';\nimport {BrowserRouter, Route} from 'react-router-dom';\nimport {connect} from 'react-redux';\n\nimport LandingPage from './LandingPage';\nimport Header from './Header';\nimport UsersSignUp from './UsersSignup';\nimport DoctorsSignUp from './DoctorsSignup';\nimport DoctorsList from './DoctorsList';\nimport MyAppointments from './MyAppointments';\nimport Notifications from './Notifications';\nimport TodaysAppointments from './TodaysAppointments';\nimport {fetchUser} from \"../actions\";\n\nclass App extends Component{\n    render() {\n        return (\n            <div>\n                <BrowserRouter>\n                    <div>\n                        <Header/>\n                        <Route exact path='/' component={LandingPage}/>\n\n                        <Route exact path='/usersSignUp' component={UsersSignUp}/>\n                        <Route exact path='/doctors' component={DoctorsList}/>\n                        <Route exact path='/myAppointments' component={MyAppointments}/>\n                        <Route exact path='/notifications' component={Notifications}/>\n\n                        <Route exact path='/doctorsSignUp' component={DoctorsSignUp}/>\n                        <Route exact path='/todaysAppointments' component={TodaysAppointments}/>\n                    </div>\n                </BrowserRouter>\n            </div>\n        );\n    }\n\n    componentDidMount() {\n        this.props.fetchUser();\n    }\n}\n\nexport default connect(null, {fetchUser})(App);","import {combineReducers} from 'redux';\r\n\r\nimport auth from './authReducer';\r\nimport doctorsList from './doctorsListReducer';\r\nimport myAppointments from './myAppointmentsReducer';\r\nimport myNotifications from './notificationsReducer';\r\nimport todaysAppointments from './todaysAppointmentsReducer';\r\n\r\nconst combinedReducer = combineReducers({\r\n    auth,\r\n    doctorsList,\r\n    myAppointments,\r\n    myNotifications,\r\n    todaysAppointments\r\n});\r\n\r\nexport default combinedReducer;","import {FETCH_USER} from \"../actions/types\";\r\n\r\nexport default function (state = null, action) {\r\n    switch (action.type) {\r\n        case FETCH_USER:\r\n            return action.payload || false;\r\n        default:\r\n            return state;\r\n    }\r\n}","import {FETCH_DOCTORS} from \"../actions/types\";\r\n\r\nexport default function (state = null, action) {\r\n    switch (action.type) {\r\n        case FETCH_DOCTORS:\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}","import {FETCH_MY_APPOINTMENTS} from \"../actions/types\";\r\n\r\nexport default function (state = null, action) {\r\n    switch (action.type) {\r\n        case FETCH_MY_APPOINTMENTS:\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}","import {FETCH_NOTIFICATIONS, CLEAR_NOTIFICATIONS} from \"../actions/types\";\r\n\r\nexport default function (state = null, action) {\r\n    switch (action.type) {\r\n        case FETCH_NOTIFICATIONS:\r\n            return action.payload;\r\n        case CLEAR_NOTIFICATIONS:\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}","import {FETCH_TODAYS_APPOINTMENTS, CONFIRM_APPOINTMENT} from \"../actions/types\";\r\n\r\nexport default function (state = null, action) {\r\n    switch (action.type) {\r\n        case FETCH_TODAYS_APPOINTMENTS:\r\n            return action.payload;\r\n        case CONFIRM_APPOINTMENT:\r\n            if (action.payload.data.success) {\r\n                let newState = [];\r\n                state.map(function (v, i) {\r\n                    if (i == action.payload.pos) {\r\n                        state[i].status = \"confirmed\";\r\n                    }\r\n\r\n                    newState.push(v);\r\n                });\r\n                return newState\r\n            } else\r\n                return state;\r\n        default:\r\n            return state;\r\n    }\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport {createStore, applyMiddleware} from 'redux';\nimport reduxThunk from 'redux-thunk';\n\nimport App from './components/App';\nimport reducers from './reducers';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = createStore(reducers, {}, applyMiddleware(reduxThunk));\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>,\n    document.getElementById('root'));\n\nserviceWorker.unregister();\n\n\n"],"sourceRoot":""}